---
title: "Lecture 12: Getting Visualizions onto the Web"
subtitle: "*DSAN 5200-03: Advanced Data Visualization*"
author:
  - "Abhijit Dasgupta"
  - "Jeff Jacobs"
  - "Anderson Monken"
  - "Marck Vaisman"
institute:
  - "<a href='mailto:abhijit.dasgupta@georgetown.edu' target='_blank'>`abhijit.dasgupta`</a>"
  - "<a href='mailto:jj1088@georgetown.edu' target='_blank'>`jj1088`</a>"
  - "<a href='mailto:aem303@georgetown.edu' target='_blank'>`aem303`</a>"
  - "<a href='mailto:marck.vaisman@georgetown.edu' target='_blank'>`marck.vaisman`</a>"
date: 2024-04-09
date-format: full
lecnum: 12
categories:
  - "Class Sessions"
bibliography: "../_DSAN5200.bib"
format:
  revealjs:
    df-print: kable
    output-file: slides.html
    theme: ["../_jjslides.scss"]
    footer: "DSAN 5200-03 Week 12: Visualization Backends"
    echo: true
    code-fold: show
    scrollable: true
    slide-number: true
    html-math-method: mathjax
    include-in-header:
      text: "<link rel='stylesheet' href='https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css' integrity='sha384-rbsA2VBKQhggwzxH7pPCaAqO46MgnOM80zW1RWuH61DGLwZJEdK2Kadq2F9CUG65' crossorigin='anonymous'><link rel='stylesheet' href='https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css'>"
    simplemenu:
      flat: true
      barhtml:
        header: "<div class='menubar'><span style='position: absolute; left: 8; padding-left: 8px;'><a href='./index.html'>&larr; Return to Notes</a></span><ul class='menu'></ul></div>"
      scale: 0.5
    revealjs-plugins:
      - simplemenu
  html:
    df-print: kable
    output-file: "index.html"
    echo: true
    code-fold: show
    html-math-method: mathjax
---

::: {.content-visible unless-format="revealjs"}

<center>
<a class="h2" href="./slides.html" target="_blank">Open slides in new window &rarr;</a>
</center>

:::

# Web apps without rolling your own server {data-stack-name="Serverless"}

## GitHub Pages

* Most basic: GitHub Pages (web app must be *rendered* to html, hence quarto)

## Streamlit

* Streamlit map -- benefits: write directly in Python without worrying about compilation to html via quarto; using GSheets as DB, but also many many drawbacks of streamlit
* Live coding: make the basics of the map app [sidebar, main window, sl.Map(), Geocoding API

## Vercel

* Vercel + Next.js: Marxdb, DailyAtrocity
* *Pre-caching* all of the possible views -- for example, if they're visualizing 50 states, they can pre-render those 50, at urls like /al, /az, etc

# Cloud functions {data-stack-name="Cloud Functions"}

## Halfway Between Web Apps and Full-On Servers

* GCS: A quick-and-dirty "hack" for replacing actual storage space on server

# Web apps *with* your own server {data-stack-name="Web Servers and VMs"}

## Flask!

* Bridges the gap between Cloud functions and... Apache
* Obvious disadvantage: cost (even worse than cloud functions)
* Advantages: Run anything at all, beyond just Python
* Multiple domains, subdomains, etc.

## Flask Lab

* Hello world but also with parameters; reasons to use GET vs POST
* How does it help with viz?
* Immediate answer: take an app with big big data file on HDD $\rightarrow$ load dynamically via GET request in Flask app!